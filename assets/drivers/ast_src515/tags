!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ANX9807_VBIOS_TX	ast_drv.h	360;"	d
AST1100	ast_drv.h	/^	AST1100,$/;"	e	enum:ast_chip
AST2000	ast_drv.h	/^	AST2000,$/;"	e	enum:ast_chip
AST2100	ast_drv.h	/^	AST2100,$/;"	e	enum:ast_chip
AST2150	ast_drv.h	/^	AST2150,$/;"	e	enum:ast_chip
AST2200	ast_drv.h	/^	AST2200,$/;"	e	enum:ast_chip
AST2300	ast_drv.h	/^	AST2300,$/;"	e	enum:ast_chip
AST2400	ast_drv.h	/^	AST2400,$/;"	e	enum:ast_chip
AST2500	ast_drv.h	/^	AST2500,$/;"	e	enum:ast_chip
AST2500PreCatchCRT	ast_tables.h	50;"	d
AST2600	ast_drv.h	/^	AST2600,$/;"	e	enum:ast_chip
ASTDP_1024x768_60	ast_drv.h	432;"	d
ASTDP_1024x768_70	ast_drv.h	433;"	d
ASTDP_1024x768_75	ast_drv.h	434;"	d
ASTDP_1024x768_85	ast_drv.h	435;"	d
ASTDP_1152x864_75	ast_drv.h	454;"	d
ASTDP_1280x1024_60	ast_drv.h	436;"	d
ASTDP_1280x1024_75	ast_drv.h	437;"	d
ASTDP_1280x1024_85	ast_drv.h	438;"	d
ASTDP_1280x800_60	ast_drv.h	445;"	d
ASTDP_1280x800_60_RB	ast_drv.h	446;"	d
ASTDP_1366x768_60	ast_drv.h	453;"	d
ASTDP_1440x900_60	ast_drv.h	447;"	d
ASTDP_1440x900_60_RB	ast_drv.h	448;"	d
ASTDP_1600x1200_60	ast_drv.h	439;"	d
ASTDP_1600x900_60	ast_drv.h	451;"	d
ASTDP_1600x900_60_RB	ast_drv.h	452;"	d
ASTDP_1680x1050_60	ast_drv.h	449;"	d
ASTDP_1680x1050_60_RB	ast_drv.h	450;"	d
ASTDP_1920x1080_60	ast_drv.h	444;"	d
ASTDP_1920x1200_60	ast_drv.h	443;"	d
ASTDP_320x240_60	ast_drv.h	440;"	d
ASTDP_400x300_60	ast_drv.h	441;"	d
ASTDP_512x384_60	ast_drv.h	442;"	d
ASTDP_640x480_60	ast_drv.h	423;"	d
ASTDP_640x480_72	ast_drv.h	424;"	d
ASTDP_640x480_75	ast_drv.h	425;"	d
ASTDP_640x480_85	ast_drv.h	426;"	d
ASTDP_800x600_56	ast_drv.h	427;"	d
ASTDP_800x600_60	ast_drv.h	428;"	d
ASTDP_800x600_72	ast_drv.h	429;"	d
ASTDP_800x600_75	ast_drv.h	430;"	d
ASTDP_800x600_85	ast_drv.h	431;"	d
ASTDP_CLEAR_MASK	ast_drv.h	414;"	d
ASTDP_DPMCU_TX	ast_drv.h	362;"	d
ASTDP_EDID_READ_DATA_MASK	ast_drv.h	404;"	d
ASTDP_EDID_READ_POINTER_MASK	ast_drv.h	402;"	d
ASTDP_EDID_VALID_FLAG_MASK	ast_drv.h	403;"	d
ASTDP_HOST_EDID_READ_DONE	ast_drv.h	384;"	d
ASTDP_HOST_EDID_READ_DONE_MASK	ast_drv.h	385;"	d
ASTDP_HPD	ast_drv.h	383;"	d
ASTDP_LINK_SUCCESS	ast_drv.h	382;"	d
ASTDP_MCU_FW_EXECUTING	ast_drv.h	381;"	d
ASTDP_MIRROR_VIDEO_ENABLE	ast_drv.h	400;"	d
ASTDP_MISC0_24bpp	ast_drv.h	412;"	d
ASTDP_MISC1	ast_drv.h	413;"	d
ASTDP_State	ast_drv.h	/^	u8 ASTDP_State;$/;"	m	struct:ast_private
AST_DDR2	ast_post.c	410;"	d	file:
AST_DDR3	ast_post.c	409;"	d	file:
AST_DEFAULT_HWC_NUM	ast_drv.h	95;"	d
AST_DP501_DEFAULT_DCLK	ast_drv.h	341;"	d
AST_DP501_EDID_DATA	ast_drv.h	346;"	d
AST_DP501_FW_VERSION_1	ast_drv.h	338;"	d
AST_DP501_FW_VERSION_MASK	ast_drv.h	337;"	d
AST_DP501_GBL_VERSION	ast_drv.h	343;"	d
AST_DP501_LINKRATE	ast_drv.h	345;"	d
AST_DP501_PNPMONITOR	ast_drv.h	344;"	d
AST_DP501_PNP_CONNECTED	ast_drv.h	339;"	d
AST_DPMS_HSYNC_OFF	ast_drv.h	392;"	d
AST_DPMS_VSYNC_OFF	ast_drv.h	391;"	d
AST_DP_PHY_SLEEP	ast_drv.h	369;"	d
AST_DP_POWER_OFF	ast_drv.h	373;"	d
AST_DP_POWER_ON	ast_drv.h	372;"	d
AST_DP_VIDEO_ENABLE	ast_drv.h	370;"	d
AST_DRAM_1Gx16	ast_drv.h	78;"	d
AST_DRAM_1Gx32	ast_drv.h	80;"	d
AST_DRAM_2Gx16	ast_drv.h	81;"	d
AST_DRAM_4Gx16	ast_drv.h	82;"	d
AST_DRAM_512Mx16	ast_drv.h	77;"	d
AST_DRAM_512Mx32	ast_drv.h	79;"	d
AST_DRAM_8Gx16	ast_drv.h	83;"	d
AST_DRAM_TABLES_H	ast_dram_tables.h	3;"	d
AST_HWC_SIGNATURE_CHECKSUM	ast_drv.h	98;"	d
AST_HWC_SIGNATURE_HOTSPOTX	ast_drv.h	103;"	d
AST_HWC_SIGNATURE_HOTSPOTY	ast_drv.h	104;"	d
AST_HWC_SIGNATURE_SIZE	ast_drv.h	93;"	d
AST_HWC_SIGNATURE_SizeX	ast_drv.h	99;"	d
AST_HWC_SIGNATURE_SizeY	ast_drv.h	100;"	d
AST_HWC_SIGNATURE_X	ast_drv.h	101;"	d
AST_HWC_SIGNATURE_Y	ast_drv.h	102;"	d
AST_HWC_SIZE	ast_drv.h	92;"	d
AST_IO_AR_PORT_WRITE	ast_drv.h	196;"	d
AST_IO_CRTC_PORT	ast_drv.h	204;"	d
AST_IO_DAC_DATA	ast_drv.h	202;"	d
AST_IO_DAC_INDEX_READ	ast_drv.h	200;"	d
AST_IO_DAC_INDEX_WRITE	ast_drv.h	201;"	d
AST_IO_GR_PORT	ast_drv.h	203;"	d
AST_IO_INPUT_STATUS1_READ	ast_drv.h	205;"	d
AST_IO_MISC_PORT_READ	ast_drv.h	206;"	d
AST_IO_MISC_PORT_WRITE	ast_drv.h	197;"	d
AST_IO_MM_OFFSET	ast_drv.h	208;"	d
AST_IO_SEQ_PORT	ast_drv.h	199;"	d
AST_IO_VGACRCB_HWC_16BPP	ast_drv.h	213;"	d
AST_IO_VGACRCB_HWC_ENABLED	ast_drv.h	212;"	d
AST_IO_VGAIR1_VREFRESH	ast_drv.h	210;"	d
AST_IO_VGA_ENABLE_PORT	ast_drv.h	198;"	d
AST_MAX_HWC_HEIGHT	ast_drv.h	90;"	d
AST_MAX_HWC_WIDTH	ast_drv.h	89;"	d
AST_MM_ALIGN_MASK	ast_drv.h	335;"	d
AST_MM_ALIGN_SHIFT	ast_drv.h	334;"	d
AST_TABLES_H	ast_tables.h	25;"	d
AST_TX_ASTDP	ast_drv.h	/^	AST_TX_ASTDP,$/;"	e	enum:ast_tx_chip
AST_TX_DP501	ast_drv.h	/^	AST_TX_DP501,$/;"	e	enum:ast_tx_chip
AST_TX_ITE66121	ast_drv.h	/^	AST_TX_ITE66121,$/;"	e	enum:ast_tx_chip
AST_TX_NONE	ast_drv.h	/^	AST_TX_NONE,$/;"	e	enum:ast_tx_chip
AST_TX_SIL164	ast_drv.h	/^	AST_TX_SIL164,$/;"	e	enum:ast_tx_chip
AST_VGA_DEVICE	ast_drv.c	75;"	d	file:
AST_VIDMEM_DEFAULT_SIZE	ast_drv.h	281;"	d
AST_VIDMEM_SIZE_128M	ast_drv.h	279;"	d
AST_VIDMEM_SIZE_16M	ast_drv.h	276;"	d
AST_VIDMEM_SIZE_32M	ast_drv.h	277;"	d
AST_VIDMEM_SIZE_64M	ast_drv.h	278;"	d
AST_VIDMEM_SIZE_8M	ast_drv.h	275;"	d
AST_VPLL_REF_CLOCK_24M	ast_drv.h	332;"	d
AST_VPLL_REF_CLOCK_25M	ast_drv.h	331;"	d
AST_VRAM_INIT_STATUS_MASK	ast_drv.h	364;"	d
CBR_PASSNUM	ast_post.c	443;"	d	file:
CBR_PASSNUM2	ast_post.c	444;"	d	file:
CBR_PASSNUM_AST2150	ast_post.c	150;"	d	file:
CBR_PATNUM	ast_post.c	448;"	d	file:
CBR_PATNUM_AST2150	ast_post.c	155;"	d	file:
CBR_SIZE0	ast_post.c	440;"	d	file:
CBR_SIZE1	ast_post.c	441;"	d	file:
CBR_SIZE2	ast_post.c	442;"	d	file:
CBR_SIZE_AST2150	ast_post.c	149;"	d	file:
CBR_THRESHOLD	ast_post.c	445;"	d	file:
CBR_THRESHOLD2	ast_post.c	446;"	d	file:
CBR_THRESHOLD2_AST2150	ast_post.c	152;"	d	file:
CBR_THRESHOLD_AST2150	ast_post.c	151;"	d	file:
CH7003_VBIOS_TX	ast_drv.h	358;"	d
COPROCESSOR_LAUNCH	ast_drv.h	349;"	d
Charx8Dot	ast_tables.h	34;"	d
DP501_VBIOS_TX	ast_drv.h	359;"	d
DRIVER_AUTHOR	ast_drv.c	/^MODULE_AUTHOR(DRIVER_AUTHOR);$/;"	v
DRIVER_AUTHOR	ast_drv.h	43;"	d
DRIVER_DATE	ast_drv.h	47;"	d
DRIVER_DESC	ast_drv.c	/^MODULE_DESCRIPTION(DRIVER_DESC);$/;"	v
DRIVER_DESC	ast_drv.h	46;"	d
DRIVER_MAJOR	ast_drv.h	49;"	d
DRIVER_MINOR	ast_drv.h	50;"	d
DRIVER_NAME	ast_drv.h	45;"	d
DRIVER_PATCHLEVEL	ast_drv.h	51;"	d
DoubleScanMode	ast_tables.h	36;"	d
EGAModeIndex	ast_tables.h	29;"	d
HBorder	ast_tables.h	38;"	d
HalfDCLK	ast_tables.h	35;"	d
HiCModeIndex	ast_tables.h	31;"	d
ITE66121_VBIOS_TX	ast_drv.h	356;"	d
KERNELDIR	Makefile	/^    	KERNELDIR ?= \/lib\/modules\/$(shell uname -r)\/build$/;"	m
LineCompareOff	ast_tables.h	37;"	d
NHSync	ast_tables.h	42;"	d
NO_TX	ast_drv.h	355;"	d
NVSync	ast_tables.h	44;"	d
NewModeInfo	ast_tables.h	41;"	d
PCI_CHIP_AST2000	ast_drv.h	53;"	d
PCI_CHIP_AST2100	ast_drv.h	54;"	d
PCI_VENDOR_ASPEED	ast_drv.c	73;"	d	file:
PHSync	ast_tables.h	43;"	d
PVSync	ast_tables.h	45;"	d
PWD	Makefile	/^    PWD := $(shell pwd)$/;"	m
REGIDX_010	ast_dram_tables.h	149;"	d
REGIDX_014	ast_dram_tables.h	150;"	d
REGIDX_018	ast_dram_tables.h	151;"	d
REGIDX_020	ast_dram_tables.h	152;"	d
REGIDX_024	ast_dram_tables.h	153;"	d
REGIDX_02C	ast_dram_tables.h	154;"	d
REGIDX_030	ast_dram_tables.h	155;"	d
REGIDX_214	ast_dram_tables.h	156;"	d
REGIDX_2E0	ast_dram_tables.h	157;"	d
REGIDX_2E4	ast_dram_tables.h	158;"	d
REGIDX_2E8	ast_dram_tables.h	159;"	d
REGIDX_2EC	ast_dram_tables.h	160;"	d
REGIDX_2F0	ast_dram_tables.h	161;"	d
REGIDX_2F4	ast_dram_tables.h	162;"	d
REGIDX_2F8	ast_dram_tables.h	163;"	d
REGIDX_PLL	ast_dram_tables.h	165;"	d
REGIDX_RFC	ast_dram_tables.h	164;"	d
REGTBL_NUM	ast_dram_tables.h	148;"	d
RefCLK25MHz	ast_drv.h	/^	bool RefCLK25MHz;$/;"	m	struct:ast_private
SI164_VBIOS_TX	ast_drv.h	357;"	d
SyncNN	ast_tables.h	49;"	d
SyncNP	ast_tables.h	48;"	d
SyncPN	ast_tables.h	47;"	d
SyncPP	ast_tables.h	46;"	d
TIMEOUT	ast_post.c	447;"	d	file:
TIMEOUT_AST2150	ast_post.c	153;"	d	file:
TX_FW_EMBEDDED_FW_TX	ast_drv.h	361;"	d
TX_TYPE_MASK	ast_drv.h	354;"	d
TextModeIndex	ast_tables.h	28;"	d
TrueCModeIndex	ast_tables.h	32;"	d
VBorder	ast_tables.h	39;"	d
VCLK106_5	ast_tables.h	72;"	d
VCLK108	ast_tables.h	65;"	d
VCLK118_25	ast_tables.h	80;"	d
VCLK119	ast_tables.h	77;"	d
VCLK135	ast_tables.h	66;"	d
VCLK146_25	ast_tables.h	73;"	d
VCLK148_5	ast_tables.h	74;"	d
VCLK154	ast_tables.h	70;"	d
VCLK157_5	ast_tables.h	67;"	d
VCLK162	ast_tables.h	68;"	d
VCLK25_175	ast_tables.h	53;"	d
VCLK28_322	ast_tables.h	54;"	d
VCLK31_5	ast_tables.h	55;"	d
VCLK36	ast_tables.h	56;"	d
VCLK40	ast_tables.h	57;"	d
VCLK49_5	ast_tables.h	58;"	d
VCLK50	ast_tables.h	59;"	d
VCLK56_25	ast_tables.h	60;"	d
VCLK65	ast_tables.h	61;"	d
VCLK71	ast_tables.h	75;"	d
VCLK75	ast_tables.h	62;"	d
VCLK78_75	ast_tables.h	63;"	d
VCLK83_5	ast_tables.h	71;"	d
VCLK85_5	ast_tables.h	78;"	d
VCLK88_75	ast_tables.h	76;"	d
VCLK94_5	ast_tables.h	64;"	d
VCLK97_75	ast_tables.h	79;"	d
VGAModeIndex	ast_tables.h	30;"	d
WideScreenMode	ast_tables.h	40;"	d
__AST_DRV_H__	ast_drv.h	29;"	d
__ast_io_read	ast_drv.h	226;"	d
__ast_io_write	ast_drv.h	246;"	d
__ast_io_write	ast_drv.h	253;"	d
__ast_read	ast_drv.h	215;"	d
__ast_write	ast_drv.h	237;"	d
adapter	ast_drv.h	/^	struct i2c_adapter adapter;$/;"	m	struct:ast_i2c_chan	typeref:struct:ast_i2c_chan::i2c_adapter
ar	ast_drv.h	/^	u8 ar[20];$/;"	m	struct:ast_vbios_stdtable
ast-objs	Makefile	/^    ast-objs := ast_drv.o ast_main.o ast_mm.o ast_mode.o ast_post.o ast_dp501.o ast_dp.o$/;"	m
ast1100_dram_table_data	ast_dram_tables.h	/^static const struct ast_dramstruct ast1100_dram_table_data[] = {$/;"	v	typeref:struct:ast_dramstruct
ast2000_dram_table_data	ast_dram_tables.h	/^static const struct ast_dramstruct ast2000_dram_table_data[] = {$/;"	v	typeref:struct:ast_dramstruct
ast2100_dram_table_data	ast_dram_tables.h	/^static const struct ast_dramstruct ast2100_dram_table_data[] = {$/;"	v	typeref:struct:ast_dramstruct
ast2300_dram_param	ast_post.c	/^struct ast2300_dram_param {$/;"	s	file:
ast2500_ddr3_1600_timing_table	ast_dram_tables.h	/^static const u32 ast2500_ddr3_1600_timing_table[REGTBL_NUM] = {$/;"	v
ast2500_ddr4_1600_timing_table	ast_dram_tables.h	/^static const u32 ast2500_ddr4_1600_timing_table[REGTBL_NUM] = {$/;"	v
ast_astdp_read_edid	ast_dp.c	/^int ast_astdp_read_edid(struct drm_device *dev, u8 *ediddata)$/;"	f
ast_backup_fw	ast_dp501.c	/^bool ast_backup_fw(struct drm_device *dev, u8 *addr, u32 size)$/;"	f
ast_chip	ast_drv.h	/^enum ast_chip {$/;"	g
ast_connector	ast_drv.h	/^struct ast_connector {$/;"	s
ast_connector_destroy	ast_mode.c	/^static void ast_connector_destroy(struct drm_connector *connector)$/;"	f	file:
ast_connector_funcs	ast_mode.c	/^static const struct drm_connector_funcs ast_connector_funcs = {$/;"	v	typeref:struct:drm_connector_funcs	file:
ast_connector_helper_funcs	ast_mode.c	/^static const struct drm_connector_helper_funcs ast_connector_helper_funcs = {$/;"	v	typeref:struct:drm_connector_helper_funcs	file:
ast_connector_init	ast_mode.c	/^static int ast_connector_init(struct drm_device *dev)$/;"	f	file:
ast_crtc_atomic_destroy_state	ast_mode.c	/^static void ast_crtc_atomic_destroy_state(struct drm_crtc *crtc,$/;"	f	file:
ast_crtc_atomic_duplicate_state	ast_mode.c	/^ast_crtc_atomic_duplicate_state(struct drm_crtc *crtc)$/;"	f	file:
ast_crtc_dpms	ast_mode.c	/^static void ast_crtc_dpms(struct drm_crtc *crtc, int mode)$/;"	f	file:
ast_crtc_funcs	ast_mode.c	/^static const struct drm_crtc_funcs ast_crtc_funcs = {$/;"	v	typeref:struct:drm_crtc_funcs	file:
ast_crtc_helper_atomic_check	ast_mode.c	/^static int ast_crtc_helper_atomic_check(struct drm_crtc *crtc,$/;"	f	file:
ast_crtc_helper_atomic_disable	ast_mode.c	/^ast_crtc_helper_atomic_disable(struct drm_crtc *crtc,$/;"	f	file:
ast_crtc_helper_atomic_enable	ast_mode.c	/^ast_crtc_helper_atomic_enable(struct drm_crtc *crtc,$/;"	f	file:
ast_crtc_helper_atomic_flush	ast_mode.c	/^ast_crtc_helper_atomic_flush(struct drm_crtc *crtc,$/;"	f	file:
ast_crtc_helper_funcs	ast_mode.c	/^static const struct drm_crtc_helper_funcs ast_crtc_helper_funcs = {$/;"	v	typeref:struct:drm_crtc_helper_funcs	file:
ast_crtc_init	ast_mode.c	/^static int ast_crtc_init(struct drm_device *dev)$/;"	f	file:
ast_crtc_load_lut	ast_mode.c	/^static void ast_crtc_load_lut(struct ast_private *ast, struct drm_crtc *crtc)$/;"	f	file:
ast_crtc_reset	ast_mode.c	/^static void ast_crtc_reset(struct drm_crtc *crtc)$/;"	f	file:
ast_crtc_state	ast_drv.h	/^struct ast_crtc_state {$/;"	s
ast_cursor_plane	ast_drv.h	/^struct ast_cursor_plane {$/;"	s
ast_cursor_plane_destroy	ast_mode.c	/^static void ast_cursor_plane_destroy(struct drm_plane *plane)$/;"	f	file:
ast_cursor_plane_formats	ast_mode.c	/^static const uint32_t ast_cursor_plane_formats[] = {$/;"	v	file:
ast_cursor_plane_funcs	ast_mode.c	/^static const struct drm_plane_funcs ast_cursor_plane_funcs = {$/;"	v	typeref:struct:drm_plane_funcs	file:
ast_cursor_plane_helper_atomic_check	ast_mode.c	/^static int ast_cursor_plane_helper_atomic_check(struct drm_plane *plane,$/;"	f	file:
ast_cursor_plane_helper_atomic_disable	ast_mode.c	/^ast_cursor_plane_helper_atomic_disable(struct drm_plane *plane,$/;"	f	file:
ast_cursor_plane_helper_atomic_update	ast_mode.c	/^ast_cursor_plane_helper_atomic_update(struct drm_plane *plane,$/;"	f	file:
ast_cursor_plane_helper_funcs	ast_mode.c	/^static const struct drm_plane_helper_funcs ast_cursor_plane_helper_funcs = {$/;"	v	typeref:struct:drm_plane_helper_funcs	file:
ast_cursor_plane_init	ast_mode.c	/^static int ast_cursor_plane_init(struct ast_private *ast)$/;"	f	file:
ast_detect_chip	ast_main.c	/^static int ast_detect_chip(struct drm_device *dev, bool *need_post)$/;"	f	file:
ast_detect_config_mode	ast_main.c	/^static void ast_detect_config_mode(struct drm_device *dev, u32 *scu_rev)$/;"	f	file:
ast_device_create	ast_main.c	/^struct ast_private *ast_device_create(const struct drm_driver *drv,$/;"	f
ast_device_release	ast_main.c	/^static void ast_device_release(void *data)$/;"	f	file:
ast_disable_vga	ast_post.c	/^void ast_disable_vga(struct drm_device *dev)$/;"	f
ast_dp501_read_edid	ast_dp501.c	/^bool ast_dp501_read_edid(struct drm_device *dev, u8 *ediddata)$/;"	f
ast_dp_launch	ast_dp.c	/^void ast_dp_launch(struct drm_device *dev, u8 bPower)$/;"	f
ast_dp_power_on_off	ast_dp.c	/^void ast_dp_power_on_off(struct drm_device *dev, bool on)$/;"	f
ast_dp_set_mode	ast_dp.c	/^void ast_dp_set_mode(struct drm_crtc *crtc, struct ast_vbios_mode_info *vbios_mode)$/;"	f
ast_dp_set_on_off	ast_dp.c	/^void ast_dp_set_on_off(struct drm_device *dev, bool on)$/;"	f
ast_dram_init_2500	ast_post.c	/^static bool ast_dram_init_2500(struct ast_private *ast)$/;"	f	file:
ast_dramstruct	ast_dram_tables.h	/^struct ast_dramstruct {$/;"	s
ast_driver	ast_drv.c	/^static const struct drm_driver ast_driver = {$/;"	v	typeref:struct:drm_driver	file:
ast_drm_freeze	ast_drv.c	/^static int ast_drm_freeze(struct drm_device *dev)$/;"	f	file:
ast_drm_resume	ast_drv.c	/^static int ast_drm_resume(struct drm_device *dev)$/;"	f	file:
ast_drm_thaw	ast_drv.c	/^static int ast_drm_thaw(struct drm_device *dev)$/;"	f	file:
ast_enable_mmio	ast_post.c	/^void ast_enable_mmio(struct drm_device *dev)$/;"	f
ast_enable_vga	ast_post.c	/^void ast_enable_vga(struct drm_device *dev)$/;"	f
ast_encoder_init	ast_mode.c	/^static int ast_encoder_init(struct drm_device *dev)$/;"	f	file:
ast_exit	ast_drv.c	/^module_exit(ast_exit);$/;"	v
ast_exit	ast_drv.c	/^static void __exit ast_exit(void)$/;"	f	file:
ast_fops	ast_drv.c	/^DEFINE_DRM_GEM_FOPS(ast_fops);$/;"	v
ast_get_dp501_max_clk	ast_dp501.c	/^u8 ast_get_dp501_max_clk(struct drm_device *dev)$/;"	f
ast_get_dram_info	ast_main.c	/^static int ast_get_dram_info(struct drm_device *dev)$/;"	f	file:
ast_get_index_reg	ast_main.c	/^uint8_t ast_get_index_reg(struct ast_private *ast, uint32_t base, uint8_t index)$/;"	f
ast_get_index_reg_mask	ast_main.c	/^uint8_t ast_get_index_reg_mask(struct ast_private *ast,$/;"	f
ast_get_modes	ast_mode.c	/^static int ast_get_modes(struct drm_connector *connector)$/;"	f	file:
ast_get_ref_clock	ast_main.c	/^static bool ast_get_ref_clock(struct drm_device *dev)$/;"	f	file:
ast_get_vbios_mode_info	ast_mode.c	/^static bool ast_get_vbios_mode_info(const struct drm_format_info *format,$/;"	f	file:
ast_get_vram_size	ast_mm.c	/^static u32 ast_get_vram_size(struct ast_private *ast)$/;"	f	file:
ast_i2c_chan	ast_drv.h	/^struct ast_i2c_chan {$/;"	s
ast_i2c_create	ast_mode.c	/^static struct ast_i2c_chan *ast_i2c_create(struct drm_device *dev)$/;"	f	file:
ast_i2c_destroy	ast_mode.c	/^static void ast_i2c_destroy(struct ast_i2c_chan *i2c)$/;"	f	file:
ast_init	ast_drv.c	/^module_init(ast_init);$/;"	v
ast_init	ast_drv.c	/^static int __init ast_init(void)$/;"	f	file:
ast_init_3rdtx	ast_dp501.c	/^void ast_init_3rdtx(struct drm_device *dev)$/;"	f
ast_init_analog	ast_dp501.c	/^static void ast_init_analog(struct drm_device *dev)$/;"	f	file:
ast_init_dram_reg	ast_post.c	/^static void ast_init_dram_reg(struct drm_device *dev)$/;"	f	file:
ast_init_dvo	ast_dp501.c	/^static bool ast_init_dvo(struct drm_device *dev)$/;"	f	file:
ast_is_vga_enabled	ast_post.c	/^bool ast_is_vga_enabled(struct drm_device *dev)$/;"	f
ast_launch_m68k	ast_dp501.c	/^static bool ast_launch_m68k(struct drm_device *dev)$/;"	f	file:
ast_load_dp501_microcode	ast_dp501.c	/^static int ast_load_dp501_microcode(struct drm_device *dev)$/;"	f	file:
ast_load_palette_index	ast_mode.c	/^static inline void ast_load_palette_index(struct ast_private *ast,$/;"	f	file:
ast_mindwm	ast_post.c	/^u32 ast_mindwm(struct ast_private *ast, u32 r)$/;"	f
ast_mm_init	ast_mm.c	/^int ast_mm_init(struct ast_private *ast)$/;"	f
ast_mm_release	ast_mm.c	/^static void ast_mm_release(struct drm_device *dev, void *ptr)$/;"	f	file:
ast_mode_config_funcs	ast_mode.c	/^static const struct drm_mode_config_funcs ast_mode_config_funcs = {$/;"	v	typeref:struct:drm_mode_config_funcs	file:
ast_mode_config_helper_funcs	ast_mode.c	/^ast_mode_config_helper_funcs = {$/;"	v	typeref:struct:drm_mode_config_helper_funcs	file:
ast_mode_config_init	ast_mode.c	/^int ast_mode_config_init(struct ast_private *ast)$/;"	f
ast_mode_valid	ast_mode.c	/^static enum drm_mode_status ast_mode_valid(struct drm_connector *connector,$/;"	f	file:
ast_modeset	ast_drv.c	/^int ast_modeset = -1;$/;"	v
ast_moutdwm	ast_post.c	/^void ast_moutdwm(struct ast_private *ast, u32 r, u32 v)$/;"	f
ast_open_key	ast_drv.h	/^static inline void ast_open_key(struct ast_private *ast)$/;"	f
ast_patch_ahb_2500	ast_post.c	/^void ast_patch_ahb_2500(struct ast_private *ast)$/;"	f
ast_pci_driver	ast_drv.c	/^static struct pci_driver ast_pci_driver = {$/;"	v	typeref:struct:pci_driver	file:
ast_pci_probe	ast_drv.c	/^static int ast_pci_probe(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
ast_pci_remove	ast_drv.c	/^static void ast_pci_remove(struct pci_dev *pdev)$/;"	f	file:
ast_pciidlist	ast_drv.c	/^static const struct pci_device_id ast_pciidlist[] = {$/;"	v	typeref:struct:pci_device_id	file:
ast_pm_freeze	ast_drv.c	/^static int ast_pm_freeze(struct device *dev)$/;"	f	file:
ast_pm_ops	ast_drv.c	/^static const struct dev_pm_ops ast_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
ast_pm_poweroff	ast_drv.c	/^static int ast_pm_poweroff(struct device *dev)$/;"	f	file:
ast_pm_resume	ast_drv.c	/^static int ast_pm_resume(struct device *dev)$/;"	f	file:
ast_pm_suspend	ast_drv.c	/^static int ast_pm_suspend(struct device *dev)$/;"	f	file:
ast_pm_thaw	ast_drv.c	/^static int ast_pm_thaw(struct device *dev)$/;"	f	file:
ast_post_chip_2300	ast_post.c	/^static void ast_post_chip_2300(struct drm_device *dev)$/;"	f	file:
ast_post_chip_2500	ast_post.c	/^void ast_post_chip_2500(struct drm_device *dev)$/;"	f
ast_post_gpu	ast_post.c	/^void ast_post_gpu(struct drm_device *dev)$/;"	f
ast_primary_plane_formats	ast_mode.c	/^static const uint32_t ast_primary_plane_formats[] = {$/;"	v	file:
ast_primary_plane_funcs	ast_mode.c	/^static const struct drm_plane_funcs ast_primary_plane_funcs = {$/;"	v	typeref:struct:drm_plane_funcs	file:
ast_primary_plane_helper_atomic_check	ast_mode.c	/^static int ast_primary_plane_helper_atomic_check(struct drm_plane *plane,$/;"	f	file:
ast_primary_plane_helper_atomic_disable	ast_mode.c	/^ast_primary_plane_helper_atomic_disable(struct drm_plane *plane,$/;"	f	file:
ast_primary_plane_helper_atomic_update	ast_mode.c	/^ast_primary_plane_helper_atomic_update(struct drm_plane *plane,$/;"	f	file:
ast_primary_plane_helper_funcs	ast_mode.c	/^static const struct drm_plane_helper_funcs ast_primary_plane_helper_funcs = {$/;"	v	typeref:struct:drm_plane_helper_funcs	file:
ast_primary_plane_init	ast_mode.c	/^static int ast_primary_plane_init(struct ast_private *ast)$/;"	f	file:
ast_private	ast_drv.h	/^struct ast_private {$/;"	s
ast_release_firmware	ast_dp501.c	/^static void ast_release_firmware(void *data)$/;"	f	file:
ast_set_color_reg	ast_mode.c	/^static void ast_set_color_reg(struct ast_private *ast,$/;"	f	file:
ast_set_crtc_reg	ast_mode.c	/^static void ast_set_crtc_reg(struct ast_private *ast,$/;"	f	file:
ast_set_crtthd_reg	ast_mode.c	/^static void ast_set_crtthd_reg(struct ast_private *ast)$/;"	f	file:
ast_set_cursor_base	ast_mode.c	/^static void ast_set_cursor_base(struct ast_private *ast, u64 address)$/;"	f	file:
ast_set_cursor_enabled	ast_mode.c	/^static void ast_set_cursor_enabled(struct ast_private *ast, bool enabled)$/;"	f	file:
ast_set_cursor_location	ast_mode.c	/^static void ast_set_cursor_location(struct ast_private *ast, u16 x, u16 y,$/;"	f	file:
ast_set_dclk_reg	ast_mode.c	/^static void ast_set_dclk_reg(struct ast_private *ast,$/;"	f	file:
ast_set_def_ext_reg	ast_post.c	/^ast_set_def_ext_reg(struct drm_device *dev)$/;"	f	file:
ast_set_dp501_video_output	ast_dp501.c	/^void ast_set_dp501_video_output(struct drm_device *dev, u8 mode)$/;"	f
ast_set_index_reg	ast_drv.h	/^static inline void ast_set_index_reg(struct ast_private *ast,$/;"	f
ast_set_index_reg_mask	ast_main.c	/^void ast_set_index_reg_mask(struct ast_private *ast,$/;"	f
ast_set_offset_reg	ast_mode.c	/^static void ast_set_offset_reg(struct ast_private *ast,$/;"	f	file:
ast_set_start_address_crt1	ast_mode.c	/^static void ast_set_start_address_crt1(struct ast_private *ast,$/;"	f	file:
ast_set_std_reg	ast_mode.c	/^static void ast_set_std_reg(struct ast_private *ast,$/;"	f	file:
ast_set_sync_reg	ast_mode.c	/^static void ast_set_sync_reg(struct ast_private *ast,$/;"	f	file:
ast_set_vbios_color_reg	ast_mode.c	/^static void ast_set_vbios_color_reg(struct ast_private *ast,$/;"	f	file:
ast_set_vbios_mode_reg	ast_mode.c	/^static void ast_set_vbios_mode_reg(struct ast_private *ast,$/;"	f	file:
ast_tx_chip	ast_drv.h	/^enum ast_tx_chip {$/;"	g
ast_update_cursor_image	ast_mode.c	/^static void ast_update_cursor_image(u8 __iomem *dst, const u8 *src, int width, int height)$/;"	f	file:
ast_use_defaults	ast_drv.h	/^		ast_use_defaults$/;"	e	enum:ast_private::__anon2
ast_use_dt	ast_drv.h	/^		ast_use_dt,$/;"	e	enum:ast_private::__anon2
ast_use_p2a	ast_drv.h	/^		ast_use_p2a,$/;"	e	enum:ast_private::__anon2
ast_vbios_dclk_info	ast_drv.h	/^struct ast_vbios_dclk_info {$/;"	s
ast_vbios_enhtable	ast_drv.h	/^struct ast_vbios_enhtable {$/;"	s
ast_vbios_mode_info	ast_drv.h	/^struct ast_vbios_mode_info {$/;"	s
ast_vbios_stdtable	ast_drv.h	/^struct ast_vbios_stdtable {$/;"	s
ast_wait_for_vretrace	ast_mode.c	/^static void ast_wait_for_vretrace(struct ast_private *ast)$/;"	f	file:
ast_write_cmd	ast_dp501.c	/^static bool ast_write_cmd(struct drm_device *dev, u8 data)$/;"	f	file:
ast_write_data	ast_dp501.c	/^static bool ast_write_data(struct drm_device *dev, u8 data)$/;"	f	file:
base	ast_drv.h	/^	struct drm_connector base;$/;"	m	struct:ast_connector	typeref:struct:ast_connector::drm_connector
base	ast_drv.h	/^	struct drm_crtc_state base;$/;"	m	struct:ast_crtc_state	typeref:struct:ast_crtc_state::drm_crtc_state
base	ast_drv.h	/^	struct drm_device base;$/;"	m	struct:ast_private	typeref:struct:ast_private::drm_device
base	ast_drv.h	/^	struct drm_plane base;$/;"	m	struct:ast_cursor_plane	typeref:struct:ast_cursor_plane::drm_plane
bit	ast_drv.h	/^	struct i2c_algo_bit_data bit;$/;"	m	struct:ast_i2c_chan	typeref:struct:ast_i2c_chan::i2c_algo_bit_data
cbr_dll2	ast_post.c	/^static bool cbr_dll2(struct ast_private *ast, struct ast2300_dram_param *param)$/;"	f	file:
cbr_scan	ast_post.c	/^static int cbr_scan(struct ast_private *ast)$/;"	f	file:
cbr_scan2	ast_post.c	/^static u32 cbr_scan2(struct ast_private *ast)$/;"	f	file:
cbr_scan3	ast_post.c	/^static bool cbr_scan3(struct ast_private *ast)$/;"	f	file:
cbr_test	ast_post.c	/^static int cbr_test(struct ast_private *ast)$/;"	f	file:
cbr_test2	ast_post.c	/^static u32 cbr_test2(struct ast_private *ast)$/;"	f	file:
cbr_test3	ast_post.c	/^static bool cbr_test3(struct ast_private *ast)$/;"	f	file:
cbr_test_2500	ast_post.c	/^static bool cbr_test_2500(struct ast_private *ast)$/;"	f	file:
cbrdlli_ast2150	ast_post.c	/^static void cbrdlli_ast2150(struct ast_private *ast, int busw)$/;"	f	file:
cbrscan_ast2150	ast_post.c	/^static int cbrscan_ast2150(struct ast_private *ast, int busw)$/;"	f	file:
cbrtest_ast2150	ast_post.c	/^static int cbrtest_ast2150(struct ast_private *ast)$/;"	f	file:
ccflags-y	Makefile	/^ccflags-y := -Iinclude\/drm$/;"	m
check_dram_size_2500	ast_post.c	/^static void check_dram_size_2500(struct ast_private *ast, u32 tRFC)$/;"	f	file:
chip	ast_drv.h	/^	enum ast_chip chip;$/;"	m	struct:ast_private	typeref:enum:ast_private::ast_chip
clear_cmd_trigger	ast_dp501.c	/^static void clear_cmd_trigger(struct ast_private *ast)$/;"	f	file:
config_mode	ast_drv.h	/^	} config_mode;$/;"	m	struct:ast_private	typeref:enum:ast_private::__anon2
connector	ast_drv.h	/^	struct ast_connector connector;$/;"	m	struct:ast_private	typeref:struct:ast_private::ast_connector
crtc	ast_drv.h	/^	struct drm_crtc crtc;$/;"	m	struct:ast_private	typeref:struct:ast_private::drm_crtc
crtc	ast_drv.h	/^	u8 crtc[25];$/;"	m	struct:ast_vbios_stdtable
cursor_plane	ast_drv.h	/^	struct ast_cursor_plane cursor_plane;$/;"	m	struct:ast_private	typeref:struct:ast_private::ast_cursor_plane
data	ast_dram_tables.h	/^	u32 data;$/;"	m	struct:ast_dramstruct
dclk_index	ast_drv.h	/^	u32 dclk_index;$/;"	m	struct:ast_vbios_enhtable
dclk_table	ast_tables.h	/^static const struct ast_vbios_dclk_info dclk_table[] = {$/;"	v	typeref:struct:ast_vbios_dclk_info
dclk_table_25MHz	ast_tables.h	/^static const struct ast_vbios_dclk_info dclk_table_25MHz[] = {$/;"	v	typeref:struct:ast_vbios_dclk_info
dclk_table_ast2500	ast_tables.h	/^static const struct ast_vbios_dclk_info dclk_table_ast2500[] = {$/;"	v	typeref:struct:ast_vbios_dclk_info
dclk_table_ast2500_25MHz	ast_tables.h	/^static const struct ast_vbios_dclk_info dclk_table_ast2500_25MHz[] = {$/;"	v	typeref:struct:ast_vbios_dclk_info
ddr2_init	ast_post.c	/^static void ddr2_init(struct ast_private *ast, struct ast2300_dram_param *param)$/;"	f	file:
ddr3_init	ast_post.c	/^static void ddr3_init(struct ast_private *ast, struct ast2300_dram_param *param)$/;"	f	file:
ddr3_init_2500	ast_post.c	/^static void ddr3_init_2500(struct ast_private *ast, const u32 *ddr_table)$/;"	f	file:
ddr4_init_2500	ast_post.c	/^static void ddr4_init_2500(struct ast_private *ast, const u32 *ddr_table)$/;"	f	file:
ddr_init_common_2500	ast_post.c	/^static void ddr_init_common_2500(struct ast_private *ast)$/;"	f	file:
ddr_phy_init_2500	ast_post.c	/^static void ddr_phy_init_2500(struct ast_private *ast)$/;"	f	file:
ddr_test_2500	ast_post.c	/^static bool ddr_test_2500(struct ast_private *ast)$/;"	f	file:
dev	ast_drv.h	/^	struct drm_device *dev;$/;"	m	struct:ast_i2c_chan	typeref:struct:ast_i2c_chan::drm_device
dll2_finetune_step	ast_post.c	/^	u32 dll2_finetune_step;$/;"	m	struct:ast2300_dram_param	file:
dp501_fw	ast_drv.h	/^	const struct firmware *dp501_fw;	\/* dp501 fw *\/$/;"	m	struct:ast_private	typeref:struct:ast_private::firmware
dp501_fw_addr	ast_drv.h	/^	u8 *dp501_fw_addr;$/;"	m	struct:ast_private
dp501_fw_buf	ast_drv.h	/^	void __iomem *dp501_fw_buf;$/;"	m	struct:ast_private
dp501_maxclk	ast_drv.h	/^	u8 dp501_maxclk;$/;"	m	struct:ast_private
dram_bus_width	ast_drv.h	/^	uint32_t dram_bus_width;$/;"	m	struct:ast_private
dram_chipid	ast_post.c	/^	u32 dram_chipid;$/;"	m	struct:ast2300_dram_param	file:
dram_config	ast_post.c	/^	u32 dram_config;$/;"	m	struct:ast2300_dram_param	file:
dram_freq	ast_post.c	/^	u32 dram_freq;$/;"	m	struct:ast2300_dram_param	file:
dram_type	ast_drv.h	/^	uint32_t dram_type;$/;"	m	struct:ast_private
dram_type	ast_post.c	/^	u32 dram_type;$/;"	m	struct:ast2300_dram_param	file:
enable_cache_2500	ast_post.c	/^static void enable_cache_2500(struct ast_private *ast)$/;"	f	file:
encoder	ast_drv.h	/^	struct drm_encoder encoder;$/;"	m	struct:ast_private	typeref:struct:ast_private::drm_encoder
enh_table	ast_drv.h	/^	const struct ast_vbios_enhtable *enh_table;$/;"	m	struct:ast_vbios_mode_info	typeref:struct:ast_vbios_mode_info::ast_vbios_enhtable
extreginfo	ast_post.c	/^static const u8 extreginfo[] = { 0x0f, 0x04, 0x1c, 0xff };$/;"	v	file:
extreginfo_ast2300	ast_post.c	/^static const u8 extreginfo_ast2300[] = { 0x0f, 0x04, 0x1f, 0xff };$/;"	v	file:
extreginfo_ast2300a0	ast_post.c	/^static const u8 extreginfo_ast2300a0[] = { 0x0f, 0x04, 0x1c, 0xff };$/;"	v	file:
fb_mtrr	ast_drv.h	/^	int fb_mtrr;$/;"	m	struct:ast_private
finetuneDQI_L	ast_post.c	/^static bool finetuneDQI_L(struct ast_private *ast, struct ast2300_dram_param *param)$/;"	f	file:
finetuneDQSI	ast_post.c	/^static void finetuneDQSI(struct ast_private *ast)$/;"	f	file:
flags	ast_drv.h	/^	u32 flags;$/;"	m	struct:ast_vbios_enhtable
format	ast_drv.h	/^	const struct drm_format_info *format;$/;"	m	struct:ast_crtc_state	typeref:struct:ast_crtc_state::drm_format_info
gbo	ast_drv.h	/^		struct drm_gem_vram_object *gbo;$/;"	m	struct:ast_cursor_plane::__anon1	typeref:struct:ast_cursor_plane::__anon1::drm_gem_vram_object
get_clock	ast_mode.c	/^static int get_clock(void *i2c_priv)$/;"	f	file:
get_data	ast_mode.c	/^static int get_data(void *i2c_priv)$/;"	f	file:
get_ddr2_info	ast_post.c	/^static void get_ddr2_info(struct ast_private *ast, struct ast2300_dram_param *param)$/;"	f	file:
get_ddr3_info	ast_post.c	/^static void get_ddr3_info(struct ast_private *ast, struct ast2300_dram_param *param)$/;"	f	file:
get_fw_base	ast_dp501.c	/^static u32 get_fw_base(struct ast_private *ast)$/;"	f	file:
gr	ast_drv.h	/^	u8 gr[9];$/;"	m	struct:ast_vbios_stdtable
hde	ast_drv.h	/^	u32 hde;$/;"	m	struct:ast_vbios_enhtable
hfp	ast_drv.h	/^	u32 hfp;$/;"	m	struct:ast_vbios_enhtable
hsync	ast_drv.h	/^	u32 hsync;$/;"	m	struct:ast_vbios_enhtable
ht	ast_drv.h	/^	u32 ht;$/;"	m	struct:ast_vbios_enhtable
hwc	ast_drv.h	/^	} hwc[AST_DEFAULT_HWC_NUM];$/;"	m	struct:ast_cursor_plane	typeref:struct:ast_cursor_plane::__anon1
i2c	ast_drv.h	/^	struct ast_i2c_chan *i2c;$/;"	m	struct:ast_connector	typeref:struct:ast_connector::ast_i2c_chan
index	ast_dram_tables.h	/^	u16 index;$/;"	m	struct:ast_dramstruct
ioregs	ast_drv.h	/^	void __iomem *ioregs;$/;"	m	struct:ast_private
madj_max	ast_post.c	/^	u32 madj_max;$/;"	m	struct:ast2300_dram_param	file:
map	ast_drv.h	/^		struct dma_buf_map map;$/;"	m	struct:ast_cursor_plane::__anon1	typeref:struct:ast_cursor_plane::__anon1::dma_buf_map
mclk	ast_drv.h	/^	uint32_t mclk;$/;"	m	struct:ast_private
misc	ast_drv.h	/^	u8 misc;$/;"	m	struct:ast_vbios_stdtable
mmc_test	ast_post.c	/^static bool mmc_test(struct ast_private *ast, u32 datagen, u8 test_ctl)$/;"	f	file:
mmc_test2	ast_post.c	/^static u32 mmc_test2(struct ast_private *ast, u32 datagen, u8 test_ctl)$/;"	f	file:
mmc_test_burst	ast_post.c	/^static bool mmc_test_burst(struct ast_private *ast, u32 datagen)$/;"	f	file:
mmc_test_burst2	ast_post.c	/^static u32 mmc_test_burst2(struct ast_private *ast, u32 datagen)$/;"	f	file:
mmc_test_single	ast_post.c	/^static bool mmc_test_single(struct ast_private *ast, u32 datagen)$/;"	f	file:
mmc_test_single2	ast_post.c	/^static u32 mmc_test_single2(struct ast_private *ast, u32 datagen)$/;"	f	file:
mmc_test_single_2500	ast_post.c	/^static bool mmc_test_single_2500(struct ast_private *ast, u32 datagen)$/;"	f	file:
mmctestburst2_ast2150	ast_post.c	/^static u32 mmctestburst2_ast2150(struct ast_private *ast, u32 datagen)$/;"	f	file:
mode_id	ast_drv.h	/^	u32 mode_id;$/;"	m	struct:ast_vbios_enhtable
next_hwc_index	ast_drv.h	/^	unsigned int next_hwc_index;$/;"	m	struct:ast_cursor_plane
odt	ast_post.c	/^	u32 odt;$/;"	m	struct:ast2300_dram_param	file:
off	ast_drv.h	/^		u64 off;$/;"	m	struct:ast_cursor_plane::__anon1
param1	ast_drv.h	/^	u8 param1;$/;"	m	struct:ast_vbios_dclk_info
param2	ast_drv.h	/^	u8 param2;$/;"	m	struct:ast_vbios_dclk_info
param3	ast_drv.h	/^	u8 param3;$/;"	m	struct:ast_vbios_dclk_info
pattern	ast_post.c	/^static const u32 pattern[8] = {$/;"	v	file:
pattern_AST2150	ast_post.c	/^static const u32 pattern_AST2150[14] = {$/;"	v	file:
primary_plane	ast_drv.h	/^	struct drm_plane primary_plane;$/;"	m	struct:ast_private	typeref:struct:ast_private::drm_plane
refresh_rate	ast_drv.h	/^	u32 refresh_rate;$/;"	m	struct:ast_vbios_enhtable
refresh_rate_index	ast_drv.h	/^	u32 refresh_rate_index;$/;"	m	struct:ast_vbios_enhtable
reg_AC1	ast_post.c	/^	u32 reg_AC1;$/;"	m	struct:ast2300_dram_param	file:
reg_AC2	ast_post.c	/^	u32 reg_AC2;$/;"	m	struct:ast2300_dram_param	file:
reg_DQIDLY	ast_post.c	/^	u32 reg_DQIDLY;$/;"	m	struct:ast2300_dram_param	file:
reg_DQSIC	ast_post.c	/^	u32 reg_DQSIC;$/;"	m	struct:ast2300_dram_param	file:
reg_DRV	ast_post.c	/^	u32 reg_DRV;$/;"	m	struct:ast2300_dram_param	file:
reg_EMRS	ast_post.c	/^	u32 reg_EMRS;$/;"	m	struct:ast2300_dram_param	file:
reg_FREQ	ast_post.c	/^	u32 reg_FREQ;$/;"	m	struct:ast2300_dram_param	file:
reg_IOZ	ast_post.c	/^	u32 reg_IOZ;$/;"	m	struct:ast2300_dram_param	file:
reg_MADJ	ast_post.c	/^	u32 reg_MADJ;$/;"	m	struct:ast2300_dram_param	file:
reg_MRS	ast_post.c	/^	u32 reg_MRS;$/;"	m	struct:ast2300_dram_param	file:
reg_PERIOD	ast_post.c	/^	u32 reg_PERIOD;$/;"	m	struct:ast2300_dram_param	file:
reg_SADJ	ast_post.c	/^	u32 reg_SADJ;$/;"	m	struct:ast2300_dram_param	file:
regs	ast_drv.h	/^	void __iomem *regs;$/;"	m	struct:ast_private
res_1024x768	ast_tables.h	/^static const struct ast_vbios_enhtable res_1024x768[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
res_1152x864	ast_tables.h	/^static const struct ast_vbios_enhtable res_1152x864[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
res_1280x1024	ast_tables.h	/^static const struct ast_vbios_enhtable res_1280x1024[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
res_1280x800	ast_tables.h	/^static const struct ast_vbios_enhtable res_1280x800[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
res_1360x768	ast_tables.h	/^static const struct ast_vbios_enhtable res_1360x768[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
res_1440x900	ast_tables.h	/^static const struct ast_vbios_enhtable res_1440x900[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
res_1600x1200	ast_tables.h	/^static const struct ast_vbios_enhtable res_1600x1200[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
res_1600x900	ast_tables.h	/^static const struct ast_vbios_enhtable res_1600x900[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
res_1680x1050	ast_tables.h	/^static const struct ast_vbios_enhtable res_1680x1050[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
res_1920x1080	ast_tables.h	/^static const struct ast_vbios_enhtable res_1920x1080[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
res_1920x1200	ast_tables.h	/^static const struct ast_vbios_enhtable res_1920x1200[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
res_640x480	ast_tables.h	/^static const struct ast_vbios_enhtable res_640x480[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
res_800x600	ast_tables.h	/^static const struct ast_vbios_enhtable res_800x600[] = {$/;"	v	typeref:struct:ast_vbios_enhtable
reset_mmc_2500	ast_post.c	/^static void reset_mmc_2500(struct ast_private *ast)$/;"	f	file:
rodt	ast_post.c	/^	u32 rodt;$/;"	m	struct:ast2300_dram_param	file:
send_ack	ast_dp501.c	/^static void send_ack(struct ast_private *ast)$/;"	f	file:
send_nack	ast_dp501.c	/^static void send_nack(struct ast_private *ast)$/;"	f	file:
seq	ast_drv.h	/^	u8 seq[4];$/;"	m	struct:ast_vbios_stdtable
set_clock	ast_mode.c	/^static void set_clock(void *i2c_priv, int clock)$/;"	f	file:
set_cmd_trigger	ast_dp501.c	/^static void set_cmd_trigger(struct ast_private *ast)$/;"	f	file:
set_data	ast_mode.c	/^static void set_data(void *i2c_priv, int data)$/;"	f	file:
set_mpll_2500	ast_post.c	/^static void set_mpll_2500(struct ast_private *ast)$/;"	f	file:
std_table	ast_drv.h	/^	const struct ast_vbios_stdtable *std_table;$/;"	m	struct:ast_vbios_mode_info	typeref:struct:ast_vbios_mode_info::ast_vbios_stdtable
support_wide_screen	ast_drv.h	/^	bool support_wide_screen;$/;"	m	struct:ast_private
to_ast_connector	ast_drv.h	/^to_ast_connector(struct drm_connector *connector)$/;"	f
to_ast_crtc_state	ast_drv.h	327;"	d
to_ast_cursor_plane	ast_drv.h	/^to_ast_cursor_plane(struct drm_plane *plane)$/;"	f
to_ast_private	ast_drv.h	/^static inline struct ast_private *to_ast_private(struct drm_device *dev)$/;"	f
tx_chip_type	ast_drv.h	/^	enum ast_tx_chip tx_chip_type;$/;"	m	struct:ast_private	typeref:enum:ast_private::ast_tx_chip
vbios_mode_info	ast_drv.h	/^	struct ast_vbios_mode_info vbios_mode_info;$/;"	m	struct:ast_crtc_state	typeref:struct:ast_crtc_state::ast_vbios_mode_info
vbios_stdtable	ast_tables.h	/^static const struct ast_vbios_stdtable vbios_stdtable[] = {$/;"	v	typeref:struct:ast_vbios_stdtable
vde	ast_drv.h	/^	u32 vde;$/;"	m	struct:ast_vbios_enhtable
vfp	ast_drv.h	/^	u32 vfp;$/;"	m	struct:ast_vbios_enhtable
vga2_clone	ast_drv.h	/^	bool vga2_clone;$/;"	m	struct:ast_private
vram_size	ast_post.c	/^	u32 vram_size;$/;"	m	struct:ast2300_dram_param	file:
vsync	ast_drv.h	/^	u32 vsync;$/;"	m	struct:ast_vbios_enhtable
vt	ast_drv.h	/^	u32 vt;$/;"	m	struct:ast_vbios_enhtable
wait_ack	ast_dp501.c	/^static bool wait_ack(struct ast_private *ast)$/;"	f	file:
wait_nack	ast_dp501.c	/^static bool wait_nack(struct ast_private *ast)$/;"	f	file:
wodt	ast_post.c	/^	u32 wodt;$/;"	m	struct:ast2300_dram_param	file:
